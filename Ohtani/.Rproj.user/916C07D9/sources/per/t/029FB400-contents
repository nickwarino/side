---
title: "NBA League Average History"
author: "Nick Warino"
date: 2023-02-29
format:
  html:
    embed-resources: true
editor: source  
toc: true
number-sections: true
execute: 
  echo: false
  warning: false
fig-width: 14 # Set default figure width
fig-height: 12 # Set default figure height
editor_options: 
  chunk_output_type: console
---

```{r, setup}
#| include: false


#Libraries I Always Load
library(rmarkdown) # Dynamic Documents for R
library(tidyverse) # Easily Install and Load the 'Tidyverse'
library(ggthemes) # Extra Themes, Scales and Geoms for 'ggplot2'
library(ggrepel) # Automatically Position Non-Overlapping Text Labels with 'ggplot2'
library(ggtext) # Improved Text Rendering Support for 'ggplot2'
library(lemon) # Freshing Up your 'ggplot2' Plots
library(ragg) # Graphic Devices Based on AGG
library(kableExtra) # Construct Complex Table with 'kable' and Pipe Syntax
library(tidylog) # Logging for 'dplyr' and 'tidyr' Functions
library(skimr) # Compact and Flexible Summaries of Data
library(here) # A Simpler Way to Find Your Files
source("/Users/nickmac/Dropbox/Creative Projects/Themes/My_Theme_NoY.R")
source("/Users/nickmac/Dropbox/Creative Projects/Themes/My_Theme_WithY.R")

options(scipen=999)

folder_names <- c("raw_data", 
                  "output_data", 
                  "rmd", 
                  "docs", 
                  "scripts")
sapply(folder_names, function(x) dir.create(here(x)))
remove(folder_names)
```

```{r}
library(rvest)
league_per_game_url <- "https://www.basketball-reference.com/leagues/NBA_stats_per_game.html"
league_per_game_url_page <- read_html(league_per_game_url)
nba_season_history <- html_table(league_per_game_url_page)[[1]]

# Create a vector of new column names that match the first row values
new_names <- as.character(nba_season_history[1,])

# Use colnames() function to assign new column names to old column names
colnames(nba_season_history) <- new_names

# Remove the first row using slice()
nba_season_history <- nba_season_history %>%
  slice(-1)

nba_season_history <- nba_season_history %>%
  filter(!is.na(as.numeric(Rk))) |> 
  mutate(across(6:32, as.numeric))

#mutate the HT column to inches
nba_season_history <- nba_season_history %>%
  mutate(Ht = sapply(lapply(strsplit(Ht, "-"), as.numeric), function(x) x[1] * 12 + x[2]))

nba_season_history_selected <- nba_season_history %>%
  select(Season,
         PTS,
         "3PA",
         "FGA",
         "FTA",
         AST,
         "3P%",
         "FT%",
         "eFG%",
         Pace,
         ORtg,
         Wt,
         Ht,
         TRB,
         STL,
         BLK,
         TOV,) |> 
  rename(Points=PTS,
         "3 Point Attempts"="3PA",
         "Field Goal Attempts"=FGA,
         "Free Throw Attempts"=FTA,
         "Assists"=AST,
         "3 Point %"="3P%",
         "Free Throw %"="FT%",
         "Effective Field Goal %"="eFG%",
         "Pace"=Pace,
         "Points Per 100 Poss."=ORtg,
         "Weight (lbs)"=Wt,
         "Height (Inches)"=Ht,
         "Rebounds"=TRB,
         "Steals"=STL,
         "Blocks"=BLK,
         "Turnovers"=TOV,) |>
  pivot_longer(cols=2:17,
               names_to = "Stat",
               values_to = "Value")

#convert Season from factor to numeric
nba_season_history_selected$Season <- as.numeric(gsub("-.*", "", nba_season_history_selected$Season))

#convert Season from numeric to date
nba_season_history_selected$Season <- as.Date(paste0(nba_season_history_selected$Season,"-10-01"))

#load lubridate package
library(lubridate)

#add one year to every row under season
nba_season_history_selected$Season <- nba_season_history_selected$Season + years(1)

#time series line graph with facets
ggplot(nba_season_history_selected,
       aes(x = Season,
           y = Value)) +
    geom_line() +
    facet_wrap(~Stat, scales="free_y") +  
geom_rect(aes(xmin = as.Date("1984-10-01"), xmax = as.Date("1993-07-01"), ymin = -Inf, ymax = Inf), fill = "red", alpha = 0.00199) +
  geom_rect(aes(xmin = as.Date("1995-03-19"), xmax = as.Date("1998-07-01"), ymin = -Inf, ymax = Inf), fill = "red", alpha = 0.00199) +
  geom_rect(aes(xmin = as.Date("2001-10-01"), xmax = as.Date("2003-07-01"), ymin = -Inf, ymax = Inf), fill = "red", alpha = 0.00199) +
  geom_rect(aes(xmin = as.Date("2003-10-01"), xmax = as.Date("2023-07-01"), ymin = -Inf, ymax = Inf), fill = "purple", alpha = 0.00199) +
  geom_rect(aes(xmin = as.Date("1969-10-01"), xmax = as.Date("1989-07-01"), ymin = -Inf, ymax = Inf), fill = "gold", alpha = 0.00199) +
  geom_rect(aes(xmin = as.Date("1956-10-01"), xmax = as.Date("1969-07-01"), ymin = -Inf, ymax = Inf), fill = "green", alpha = 0.00199) +
  labs(title = "NBA League Averages Per Game History, with GOAT Evolution",
       subtitle = "Green = Russell; Gold = Kareem; Red = MJ; Purple = LeBron",
       x = "Season",
       caption = "Through 2023-02-29. Data from Basketball-Reference.com. Created by Nick Warino.") +
  My_Theme_WithY()


```


```{r}
#| fig.width=16, fig.height=20
library(plotly)

# Your original code for ggplot
p <- ggplot(nba_season_history_selected,
       aes(x = Season,
           y = Value)) +
    geom_line() +
    facet_wrap(~Stat, scales="free_y") +  
  labs(title = "NBA League Averages Per Game History",
       x = "Season",
       caption = "Through 2023-02-28. Data from Basketball-Reference.com. Created by Nick Warino using R")

# Use ggplotly() to make it interactive
p <- ggplotly(p)
# 
# # Use layout() to change height and font size
# p <- p %>% layout(height = 800, # change height in pixels
#                   margin = list(l = 50, r = 50, b = 100, t = 100), # adjust margins
#                   xaxis = list(tickfont = list(size = 10)), # change x-axis font size
#                   yaxis = list(tickfont = list(size = 10))) # change y-axis font size
# 
p # display the graph
```

# Playoff Clutch
Effective FG% in last 2 minutes of regulation, score within 5 points

```{r}
clutch_url <- "https://stathead.com/tiny/oQ2cW"
clutch_url_page <- read_html(clutch_url)
clutch_nba_history <- html_table(clutch_url_page)[[1]]

clutch_nba_history <- clutch_nba_history %>%
  filter(!is.na(as.numeric(Rk))) %>%
  mutate(across(3:14, as.numeric)) %>%
  mutate(across(3:14, ~replace_na(., 0)))

# Rename the %Ast'd column
clutch_nba_history <- clutch_nba_history %>%
  rename(Ast_d_perc = `%Ast'd`) |> 
  rename(Ast_d_tot = `Ast'd`) |> 
  rename(eFG = `eFG%`)

weighted_average_eFG <- clutch_nba_history %>%
  summarize(weighted_avg_eFG = sum(eFG * FGA) / sum(FGA)) %>%
  pull(weighted_avg_eFG) %>%
  as.numeric()
  
ggplot(clutch_nba_history,
       aes(x = FGA,
           y = eFG)) +
  geom_point(aes(size = Ast_d_tot, fill = Ast_d_perc), alpha = 0.7, shape = 21, stroke = .5) +
  geom_text_repel(aes(label = Player), size = 5, color = "black", max.overlaps = 5) +
  scale_fill_gradient2(low = "blue", mid = "white", high = "red",
                       midpoint = median(clutch_nba_history$Ast_d_perc, na.rm = TRUE)) +
  geom_hline(yintercept = weighted_average_eFG, linetype = "dashed", color = "red", size = .5) +
  theme_minimal() +
  labs(title = "Most Clutch NBA Players Ever in Playoffs (since 1996)",
       subtitle = "Effective FG% in last 2 minutes of regulation, score within 5 points.\nnickwarino.com, created 2023-05-09",
       caption = "sources: Basketball-Reference.com \nUniverse of players limited to top 100 players of FGA in same situation",
       x = "FGA",
       y = "Effective FG%",
       size = "Number of FGA assisted",
       fill = "% of FGA assisted") +
  theme(legend.position = c(.9, .9)) +
  My_Theme_WithY()

```

## Super Clutch Situations

Effective FG% in last 1 minutes of regulation, shot to tie or take lead.
```{r}
clutch2_url <- "https://stathead.com/tiny/79Hlz"
clutch2_url_page <- read_html(clutch2_url)
clutch2_nba_history <- html_table(clutch2_url_page)[[1]]

clutch2_nba_history <- clutch2_nba_history %>%
  filter(!is.na(as.numeric(Rk))) %>%
  mutate(across(3:14, as.numeric)) %>%
  mutate(across(3:14, ~replace_na(., 0)))

# Rename the %Ast'd column
clutch2_nba_history <- clutch2_nba_history %>%
  rename(Ast_d_perc = `%Ast'd`) |> 
  rename(Ast_d_tot = `Ast'd`) |> 
  rename(eFG = `eFG%`)

weighted_average_eFG2 <- clutch2_nba_history %>%
  summarize(weighted_avg_eFG = sum(eFG * FGA) / sum(FGA)) %>%
  pull(weighted_avg_eFG) %>%
  as.numeric()
  
ggplot(clutch2_nba_history,
       aes(x = FGA,
           y = eFG)) +
  geom_point(aes(size = Ast_d_tot, fill = Ast_d_perc), alpha = 0.7, shape = 21, stroke = .5) +
  geom_text_repel(aes(label = Player), size = 5, color = "black", max.overlaps = 10) +
  scale_fill_gradient2(low = "blue", mid = "white", high = "red",
                       midpoint = median(clutch2_nba_history$Ast_d_perc, na.rm = TRUE)) +
  geom_hline(yintercept = weighted_average_eFG2, linetype = "dashed", color = "red", size = .5) +
  theme_minimal() +
  labs(title = "Most clutch NBA Players Ever in Playoffs (since 1996)",
       subtitle = "Effective FG% in last 1 minutes of regulation, shot to tie or take lead.\nnickwarino.com, created 2023-05-09",
       caption = "sources: Basketball-Reference.com \nUniverse of players limited to top 100 players of FGA in same situation",
       x = "FGA",
       y = "Effective FG%",
       size = "Number of FGA assisted",
       fill = "% of FGA assisted") +
  theme(legend.position = c(.9, .9)) +
  My_Theme_WithY()

```



## Super Super Clutch Situations

Effective FG% in last 50 sec of regulation, shot to take lead.
```{r}
clutch3_url <- "https://stathead.com/tiny/A0FDq"
clutch3_url_page <- read_html(clutch3_url)
clutch3_nba_history <- html_table(clutch3_url_page)[[1]]

clutch3_nba_history <- clutch3_nba_history %>%
  filter(!is.na(as.numeric(Rk))) %>%
  mutate(across(3:14, as.numeric)) %>%
  mutate(across(3:14, ~replace_na(., 0)))

# Rename the %Ast'd column
clutch3_nba_history <- clutch3_nba_history %>%
  rename(Ast_d_perc = `%Ast'd`) |> 
  rename(Ast_d_tot = `Ast'd`) |> 
  rename(eFG = `eFG%`)

weighted_average_eFG3 <- clutch3_nba_history %>%
  summarize(weighted_avg_eFG = sum(eFG * FGA) / sum(FGA)) %>%
  pull(weighted_avg_eFG) %>%
  as.numeric()
  
ggplot(clutch3_nba_history,
       aes(x = FGA,
           y = eFG)) +
  geom_point(aes(size = Ast_d_tot, fill = Ast_d_perc), alpha = 0.7, shape = 21, stroke = .5) +
  geom_text_repel(aes(label = Player), size = 5, color = "black", max.overlaps = 10) +
  scale_fill_gradient2(low = "blue", mid = "white", high = "red",
                       midpoint = .5) +
  geom_hline(yintercept = weighted_average_eFG3, linetype = "dashed", color = "red", size = .5) +
  theme_minimal() +
  labs(title = "Most clutch NBA Players Ever in Playoffs (since 1996)",
       subtitle = "Effective FG% in last 50 sec of regulation, shot to take lead.\nnickwarino.com, created 2023-05-09",
       caption = "sources: Basketball-Reference.com \nUniverse of players limited to top 100 players of FGA in same situation",
       x = "FGA",
       y = "Effective FG%",
       size = "Number of FGA assisted",
       fill = "% of FGA assisted") +
  theme(legend.position = c(.9, .9)) +
  My_Theme_WithY()

```